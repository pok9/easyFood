{"version":3,"file":"fileupload.d.ts","sources":["fileupload.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, EventEmitter, TemplateRef, AfterViewInit, AfterContentInit, QueryList, ElementRef, NgZone, ChangeDetectorRef } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Message } from 'primeng/api';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport { BlockableUI } from 'primeng/api';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nexport declare class FileUpload implements AfterViewInit, AfterContentInit, OnDestroy, BlockableUI {\r\n    private el;\r\n    sanitizer: DomSanitizer;\r\n    zone: NgZone;\r\n    private http;\r\n    cd: ChangeDetectorRef;\r\n    config: PrimeNGConfig;\r\n    name: string;\r\n    url: string;\r\n    method: string;\r\n    multiple: boolean;\r\n    accept: string;\r\n    disabled: boolean;\r\n    auto: boolean;\r\n    withCredentials: boolean;\r\n    maxFileSize: number;\r\n    invalidFileSizeMessageSummary: string;\r\n    invalidFileSizeMessageDetail: string;\r\n    invalidFileTypeMessageSummary: string;\r\n    invalidFileTypeMessageDetail: string;\r\n    invalidFileLimitMessageDetail: string;\r\n    invalidFileLimitMessageSummary: string;\r\n    style: any;\r\n    styleClass: string;\r\n    previewWidth: number;\r\n    chooseLabel: string;\r\n    uploadLabel: string;\r\n    cancelLabel: string;\r\n    chooseIcon: string;\r\n    uploadIcon: string;\r\n    cancelIcon: string;\r\n    showUploadButton: boolean;\r\n    showCancelButton: boolean;\r\n    mode: string;\r\n    headers: HttpHeaders;\r\n    customUpload: boolean;\r\n    fileLimit: number;\r\n    onBeforeUpload: EventEmitter<any>;\r\n    onSend: EventEmitter<any>;\r\n    onUpload: EventEmitter<any>;\r\n    onError: EventEmitter<any>;\r\n    onClear: EventEmitter<any>;\r\n    onRemove: EventEmitter<any>;\r\n    onSelect: EventEmitter<any>;\r\n    onProgress: EventEmitter<any>;\r\n    uploadHandler: EventEmitter<any>;\r\n    templates: QueryList<any>;\r\n    advancedFileInput: ElementRef;\r\n    basicFileInput: ElementRef;\r\n    content: ElementRef;\r\n    set files(files: File[]);\r\n    get files(): File[];\r\n    _files: File[];\r\n    progress: number;\r\n    dragHighlight: boolean;\r\n    msgs: Message[];\r\n    fileTemplate: TemplateRef<any>;\r\n    contentTemplate: TemplateRef<any>;\r\n    toolbarTemplate: TemplateRef<any>;\r\n    uploadedFileCount: number;\r\n    focus: boolean;\r\n    uploading: boolean;\r\n    duplicateIEEvent: boolean;\r\n    constructor(el: ElementRef, sanitizer: DomSanitizer, zone: NgZone, http: HttpClient, cd: ChangeDetectorRef, config: PrimeNGConfig);\r\n    ngAfterContentInit(): void;\r\n    ngAfterViewInit(): void;\r\n    choose(): void;\r\n    onFileSelect(event: any): void;\r\n    isFileSelected(file: File): boolean;\r\n    isIE11(): boolean;\r\n    validate(file: File): boolean;\r\n    private isFileTypeValid;\r\n    getTypeClass(fileType: string): string;\r\n    isWildcard(fileType: string): boolean;\r\n    getFileExtension(file: File): string;\r\n    isImage(file: File): boolean;\r\n    onImageLoad(img: any): void;\r\n    upload(): void;\r\n    clear(): void;\r\n    remove(event: Event, index: number): void;\r\n    isFileLimitExceeded(): boolean;\r\n    isChooseDisabled(): boolean;\r\n    checkFileLimit(): void;\r\n    clearInputElement(): void;\r\n    clearIEInput(): void;\r\n    hasFiles(): boolean;\r\n    onDragEnter(e: any): void;\r\n    onDragOver(e: any): void;\r\n    onDragLeave(event: any): void;\r\n    onDrop(event: any): void;\r\n    onFocus(): void;\r\n    onBlur(): void;\r\n    formatSize(bytes: any): string;\r\n    onBasicUploaderClick(): void;\r\n    getBlockableElement(): HTMLElement;\r\n    get chooseButtonLabel(): string;\r\n    get uploadButtonLabel(): string;\r\n    get cancelButtonLabel(): string;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class FileUploadModule {\r\n}\r\n"]}